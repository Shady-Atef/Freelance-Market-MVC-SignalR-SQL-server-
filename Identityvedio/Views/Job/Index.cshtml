@model PagedList.IPagedList<Identityvedio.Models.Job>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}


<div class="site-blocks-cover overlay" style="background-image: url('/Content/images/hero_1.jpg');" data-aos="fade" data-stellar-background-ratio="0.5">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-12 aos-init aos-animate" data-aos="fade">
                <h1>Find Job</h1>
                <form action="~/Job/Search" method="get">
                    <div class="row ">
                        <div class="col-md-10">
                            <div class="row">
                                <div class="col-md-6 mb-3 mb-md-0">
                                    <input type="text" class="mr-3 form-control border-0 px-4" id="Keyword" name="Keyword" placeholder="keywords or company name ">
                                </div>
                                <div class="col-md-3">
                                    <input type="submit" class="btn btn-search btn-primary btn-block" value="Search">
                                </div>
                            </div>
                        </div>

                    </div>


                </form>
            </div>
        </div>
    </div>
</div>


<div class="site-section bg-light">
    <div class="container">
        <div class="row">
            <div class="col-md-8 mb-5 mb-md-0" data-aos="fade-up" data-aos-delay="100">
                <h2 class="mb-5 h3">Recent Jobs</h2>
                <div>
                    @if (ViewBag.fromsearch == true)
                    {
                        <h5>  @Model.Count jobs found</h5>
                    }

                </div>
                <div class="rounded border jobs-wrap">

                    @*<a href="Proposal/CreateProposal/@item.ID">CreateProposal</a>*@

                    @foreach (var item in Model)
                    {

                        <a href="~/Job/Details/@item.ID" class="job-item d-block d-md-flex align-items-center freelance">
                            <div class="company-logo blank-logo text-center text-md-left pl-3">
                                <img src="Content/images/logo_1.png" alt="Image" class="img-fluid mx-auto">
                            </div>
                            <div class="job-details h-100">
                                <div class="p-3 align-self-center">
                                    <h3>
                                        @Html.DisplayFor(modelItem => item.JobTitle)
                                    </h3>
                                    <div class="d-block d-lg-flex">
                                        <div class="mr-3">
                                            <span class="icon-suitcase mr-1"></span>
                                            @Html.DisplayFor(modelItem => item.JobCategory.Name)
                                        </div>
                                        <div class="mr-3">
                                            <span class="icon-room mr-1"></span>
                                            @Html.DisplayFor(modelItem => item.JobExperienceLevel.ExperienceLevel)

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="job-category align-self-center">
                                <div class="p-3">
                                    @if (item.Price != null)
                                    {
                                        <span class="text-warning p-2 rounded border border-warning">
                                            <label>Fixed</label>
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-warning p-2 rounded border border-warning">
                                            <label>Hours</label>
                                        </span>
                                    }

                                </div>
                            </div>
                        </a>
                    }
                </div>

                <style>
                    .page-link.active {
                        color: #000000;
                        pointer-events: none;
                        cursor: default;
                        background-color: #c1b5b5;
                        border-color: #ffffff;
                    }
                </style>
                <div class="col-md-12 text-center mt-5">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination justify-content-center">
                            @*<li class="page-item disabled">
                                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                                </li>*@

                            <li>

                                @Html.PagedListPager(Model, page => Url.Action("Index",
                                    new { page }), new PagedListRenderOptions()
                                    {
                                        LiElementClasses = new List<string> {"page-link" }
                                    })
                                @*<a class="page-link" href="#">Next</a>*@
                            </li>
                        </ul>
                    </nav>

                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


                </div>
            </div>
            <div class="col-md-4 block-16" data-aos="fade-up" data-aos-delay="200">
                <div class="d-flex mb-0">
                    <h2 class="mb-5 h3 mb-0">Featured Jobs</h2>
                    <div class="ml-auto mt-1"><a href="#" class="owl-custom-prev">Prev</a> / <a href="#" class="owl-custom-next">Next</a></div>
                </div>

                <div class="nonloop-block-16 owl-carousel">
                    @foreach (var item in Model)
                    {
                        <div class="border rounded p-4 bg-white" overflow:hidden;">
                            <h2 class="h5">
                                @Html.DisplayFor(modelItem => item.JobTitle)
                            </h2>
                            <p>
                                @if (item.Price != null)
                                {
                                    <span class="border border-warning rounded p-1 px-2 text-warning">Fixed</span>
                                }
                                else
                                {
                                    <span class="border border-warning rounded p-1 px-2 text-warning">Hours</span>
                                }
                            </p>
                            <p>
                                <span class="d-block">
                                    <span class="icon-suitcase"></span>
                                    @Html.DisplayFor(modelItem => item.JobCategory.Name)
                                </span>
                                <span class="d-block">
                                    <span class="icon-room"></span>
                                    @Html.DisplayFor(modelItem => item.JobExperienceLevel.ExperienceLevel)
                                </span>
                            </p>
                            <p class="mb-0">
                                @Html.DisplayFor(modelItem => item.Desc)
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
