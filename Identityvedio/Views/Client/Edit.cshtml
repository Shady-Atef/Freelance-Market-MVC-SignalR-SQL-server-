@model Identityvedio.Models.Client

    @{
        ViewBag.Title = "Edit";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <style>
        .fileContainer {
            overflow: hidden;
            position: relative;
            text-decoration: none;
        }

            .fileContainer [type=file] {
                display: block;
                filter: alpha(opacity=0);
                opacity: 0;
                position: absolute;
                right: 0;
                text-align: right;
                top: 0;
            }

        .input-file-container {
            position: relative;
            width: 225px;
        }

        .js .input-file-trigger {
            display: block;
            padding: 14px 45px;
            color: #fff;
            font-size: 1em;
            transition: all .4s;
            cursor: pointer;
            background-color: rgb(55, 160, 0);
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            text-transform: capitalize;
            font-size: 16px;
            -webkit-box-shadow: 0 10px 30px 0 rgba(95,186,233,0.4);
            box-shadow: 0 10px 30px 0 rgba(95,186,233,0.4);
            -webkit-border-radius: 5px 5px 5px 5px;
            border-radius: 5px 5px 5px 5px;
            margin: 5px 20px 40px 20px;
            -webkit-transition: all 0.3s ease-in-out;
            -moz-transition: all 0.3s ease-in-out;
            -ms-transition: all 0.3s ease-in-out;
            -o-transition: all 0.3s ease-in-out;
            transition: all 0.3s ease-in-out;
        }

        .js .input-file {
            position: absolute;
            top: 0;
            left: 0;
            width: 225px;
            opacity: 0;
            padding: 14px 0;
            cursor: pointer;
        }

            .js .input-file:hover + .input-file-trigger,
            .js .input-file:focus + .input-file-trigger,
            .js .input-file-trigger:hover,
            .js .input-file-trigger:focus {
                /*background: rgb(55, 160, 0);
            color: #39D2B4;*/
            }

        .file-return {
            margin: 0;
        }

            .file-return:not(:empty) {
                margin: 1em 0;
            }

        .js .file-return {
            font-style: italic;
            font-size: .9em;
            font-weight: bold;
        }

            .js .file-return:not(:empty):before {
                content: "Selected file: ";
                font-style: normal;
                font-weight: normal;
            }
    </style>


    <h2>Edit</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Contract</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div>
                    <div class="input-file-container">
                        <img src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png" class="avatar img-circle img-thumbnail" alt="avatar">
                        @Html.TextBoxFor(model => model.ImagePath, new { @class = "input-file text-center center-block file-upload", @id = "my-file", type = "file", accept = "image/*" })
                        <label tabindex="0" for="my-file" class="input-file-trigger">Select image...</label>
                    </div>
                    <p class="file-return"></p>
                </div>

                <div class="form-group">

                    <div class="col-xs-6">
                        <label for="first_name"><h4>Personal Description</h4></label>
                        <div>
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control area", @style = "min-width: 100%; ", @rows = "10", @id = "comment" })
                        </div>
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-xs-6">
                        <label for="FullName"><h4>FullName:</h4></label>
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control area", @style = "min-width: 100%; ", @rows = "10", @id = "comment" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-xs-6">
                        <label for="last_name"><h4>Profesion</h4></label>
                        @Html.TextBoxFor(model => model.Profesion, new { @class = "form-control area", @style = "min-width: 100%; ", @rows = "10", @id = "comment" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-xs-6">
                        <label for="phone"><h4>SSN</h4></label>
                        @Html.TextBoxFor(model => model.SSN, new { @class = "form-control area", @style = "min-width: 100%; ", @rows = "10", @id = "comment" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-xs-12">
                        <button class="btn btn-lg btn-success" type="submit"><i class="glyphicon glyphicon-ok-sign"></i>Save</button>
                    </div>
                </div>
                </div>
                }
                
